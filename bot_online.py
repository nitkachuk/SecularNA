import os
import asyncio
import telebot
import g4f
import unicodedata
from html import escape
import re
import concurrent.futures
import time  # –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è time.time()

telegram_token = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(telegram_token)

def has_glyphs(text):
    for char in text:
        if unicodedata.category(char) == 'Lo':
            return True
    return False

@bot.message_handler(func=lambda message: message.from_user.username in ['kristina_superstar', 'gothicspring', 'Kungfuoko'])
def echo_all(message):
    attempt_count = 0  # —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
    
    while True:    
        attempt_count += 1
        
        try:
            if attempt_count > 1:
                sent_message = bot.reply_to(message, f'–°–µ–∫—É–Ω–¥–æ—á–∫—É... #{attempt_count}')  # –æ—Ç–≤–µ—Ç 1
            else:
                sent_message = bot.reply_to(message, '–°–µ–∫—É–Ω–¥–æ—á–∫—É...')  # –æ—Ç–≤–µ—Ç 1

            if attempt_count >= 10:
                bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
                bot.reply_to(message, "–û—à–∏–±–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏")  # –æ—Ç–≤–µ—Ç 2
                break

            txt = message.text + " –ø–æ-—Ä—É—Å—Å–∫–∏"
            start_time = time.time()

            # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò
            with concurrent.futures.ThreadPoolExecutor() as executor:
                future = executor.submit(g4f.ChatCompletion.create, model=g4f.models.gpt_4, messages=[ 
                    {"role": "system", "content": "–æ—Ç–≤–µ—Ç—å –ø–æ-—Ä—É—Å—Å–∫–∏, –µ—Å–ª–∏ –≤ —Ç–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å –∫–æ–¥, —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–∞—è –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ –æ–±–µ—Ä–Ω–∏ —Ç—É —á–∞—Å—Ç—å –≤ —Ç–µ–≥–∏ pre –ø–æ –ø—Ä–∏–º–µ—Ä—É <pre>—Ç–µ–∫—Å—Ç</pre>"},
                    {"role": "user", "content": txt}
                ])
                
                try:
                    response = future.result(timeout=10)  # –¢–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥
                    if time.time() - start_time > 1:
                        bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
                        bot.reply_to(message, "–û—à–∏–±–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ‚Äî –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ ‚ùå")  # –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –æ –¥–æ–ª–≥–æ–º –æ–∂–∏–¥–∞–Ω–∏–∏
                        break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª
                except concurrent.futures.TimeoutError:
                    bot.delete_message(message.chat.id, sent_message.message_id)
                    bot.reply_to(message, f"–°–µ–∫—É–Ω–¥–æ—á–∫—É... #{attempt_count}")
                    continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª —Å –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

            # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if attempt_count >= 20:
                response = "–û—à–∏–±–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ‚Äî –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ üïò"
                break

            response = response.replace("**", "<pre>").replace("**", "</pre>")  # –ó–∞–º–µ–Ω–∞ –¥–ª—è —Ç–µ–≥–æ–≤ pre

            if has_glyphs(response):
                bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
                continue

            bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
            if "<pre>" in response:
                bot.reply_to(message, response, parse_mode='HTML')  # –æ—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º –≤ —Ü–∏—Ç–∞—Ç–µ
            else:
                bot.reply_to(message, response)  # –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç

            break

        except telebot.apihelper.ApiTelegramException as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ API Telegram
            err = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API Telegram"
            print(err, e)
            bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
            continue

        except Exception as e:
            # –î—Ä—É–≥–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            err = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
            print(err, e)
            bot.delete_message(message.chat.id, sent_message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–µ–∫—É–Ω–¥–æ—á–∫—É..."
            continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª —Å –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

    attempt_count = 0  # —Å–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

bot.polling()  # —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
