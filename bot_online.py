import os
import asyncio
import telebot
import g4f
import unicodedata
from html import escape
import re
import concurrent.futures
import time  # –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è time.time()

telegram_token = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(telegram_token)

def has_glyphs(text):
    for char in text:
        if unicodedata.category(char) == 'Lo':
            return True
    return False

@bot.message_handler(func=lambda message: message.from_user.username in ['kristina_superstar', 'gothicspring', 'Kungfuoko'])

@bot.message_handler(func=lambda message: message.from_user.username in ['kristina_superstar', 'gothicspring', 'Kungfuoko'])
def echo_all(message):
    attempt_count = 0
    sent_message = bot.reply_to(message, '–°–µ–∫—É–Ω–¥–æ—á–∫—É...')  # –≤—Å–µ–≥–¥–∞ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–¥–Ω–æ —É–¥–∞–ª–µ–Ω–∏–µ

    while True:
        attempt_count += 1

        try:
            txt = message.text + " –ø–æ-—Ä—É—Å—Å–∫–∏"

            with concurrent.futures.ThreadPoolExecutor() as executor:
                future = executor.submit(g4f.ChatCompletion.create, model=g4f.models.gpt_4, messages=[ 
                    {"role": "system", "content": "–æ—Ç–≤–µ—Ç—å –ø–æ-—Ä—É—Å—Å–∫–∏, –µ—Å–ª–∏ –≤ —Ç–≤–æ–µ–º –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å –∫–æ–¥, —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–∞—è –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ –æ–±–µ—Ä–Ω–∏ —Ç—É —á–∞—Å—Ç—å –≤ —Ç–µ–≥–∏ pre –ø–æ –ø—Ä–∏–º–µ—Ä—É <pre>—Ç–µ–∫—Å—Ç</pre>"},
                    {"role": "user", "content": txt}
                ])

                try:
                    response = future.result(timeout=1)
                except concurrent.futures.TimeoutError:
                    continue  # –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞

            if attempt_count >= 20:
                bot.delete_message(message.chat.id, sent_message.message_id)
                bot.reply_to(message, "–û—à–∏–±–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ ‚Äî –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ üïò")
                break

            response = response.replace("**", "<pre>").replace("**", "</pre>")

            if has_glyphs(response):
                continue  # –Ω–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑

            bot.delete_message(message.chat.id, sent_message.message_id)  # ‚úÖ —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å

            if "<pre>" in response:
                bot.reply_to(message, response, parse_mode='HTML')
            else:
                bot.reply_to(message, response)

            break

        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)
            continue  # —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–µ–∫—É–Ω–¥–æ—á–∫—É..." –æ—Å—Ç–∞—ë—Ç—Å—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–∏


    attempt_count = 0  # —Å–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

bot.polling()  # —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
